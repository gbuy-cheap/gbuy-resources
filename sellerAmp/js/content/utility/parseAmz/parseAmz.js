"use strict";const importedModules={},importModules=async(e,o)=>{for(const r of e){if(!chrome.runtime.id)return;var t=chrome.runtime.getURL(`js/content/${o}/${r}.js`),t=await import(t);importedModules[r]=t[r]}},parseAmz=async()=>{if(await importModules(["parseConstants"],"constants"),await importModules(["parseCarousels","process","generateElement"],"utility/parseAmz"),chrome.runtime.id){const{parseConstants:o,parseCarousels:r,process:s}=importedModules,{TARGET_SELECTOR:t,selectors:a,observerOptions:n}=o;var e=document.querySelector(t);e&&new MutationObserver(async e=>{for(const o of e){if(!o.addedNodes.length)return;if(o.addedNodes[0].dataset.asin&&o.addedNodes[0].matches(a[0].CARD_SELECTOR))await s(o.addedNodes[0],a[0]);else for(const t of a)for(const r of o.addedNodes[0].querySelectorAll(t.CARD_SELECTOR))await s(r,t)}}).observe(e,n);for(const d of a)for(const c of document.querySelectorAll(d.CARD_SELECTOR))await s(c,d);await r();document.querySelectorAll("#rhf-container").forEach(e=>{new MutationObserver(async e=>{for(const o of e)if(o?.length)for(const t of o)1===t.nodeType&&t.matches(".rhf-border")&&await r(t)}).observe(e,{childList:!0})})}};export{parseAmz};